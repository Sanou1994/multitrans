@model  List<Operateur>
@{ ViewBag.Title = "Liste des Opérateurs";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["UserName"] = Convert.ToString(Session["fullName"]);
}
@using Multitrans.Models;
<style>

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        padding-top: 20px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }
</style>

<div class="main-container">
    <div class="xs-pd-20-10 pd-ltr-20">

        <div class="page-header">
            <div class="row">
                <div class="col-md-6 col-sm-12">
                    <div class="title">
                        <h4>Administration</h4>
                    </div>
                    <nav aria-label="breadcrumb" role="navigation">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="#">Acceuil</a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Liste Opérateurs
                            </li>
                        </ol>
                    </nav>
                </div>
                <div class="col-md-6 col-sm-12 text-right">
                    <a class="btn btn-primary"
                       style="color:white"
                       onclick=" document.getElementById('mediumModalCreate').style.display = 'block'">
                        Nouveau opérateur
                    </a>
                </div>
            </div>
        </div>
        <center> <h4 style="background-color:white;color:red" id="smsB"></h4></center>
        <center> <h4 style="background-color:white;color:green" id="messageB"></h4></center>

        <!-- Export Datatable start -->
        <div class="card-box mb-30">
            <div class="pb-20">

                @if (Model.Count < 1)
                {

                    <center>
                        <h2>Aucun opérateur disponible </h2>
                    </center>
                }
                else
                {
                    <table class="table hover multiple-select-row data-table-export nowrap">
                        <thead>
                            <tr>
                                <th>N° </th>
                                <th>Nom</th>
                                <th>Etat</th>
                                <th class="table-plus datatable-nosort">Actions</th>

                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var patient in Model.OrderByDescending(l => l.id))
                            {
                                var etat = (patient.status) ? "Activé" : "Désactivé";

                                <tr>
                                    <td class="table-plus">@patient.id</td>
                                    <td>@patient.libelle</td>
                                    <td>@etat</td>
                                    <td>
                                        <div class="dropdown">
                                            <a class="btn btn-link font-24 p-0 line-height-1 no-arrow dropdown-toggle"
                                               href="#"
                                               role="button"
                                               data-toggle="dropdown">
                                                <i class="dw dw-more"></i>
                                            </a>
                                            <div class="dropdown-menu dropdown-menu-right dropdown-menu-icon-list">
                                                <button class="dropdown-item" onclick="ouvrirDepartementModal(@patient.id)"><i class="dw dw-edit2"></i> Modifier</button>
                                                <button class="dropdown-item" onclick=" bloquageModal(@patient.id)"><i class="dw dw-lock"></i> Bloquer</button>
                                            </div>
                                        </div>

                                    </td>

                                </tr>

                            }


                        </tbody>
                    </table>
                }

            </div>
        </div>
        <!-- Export Datatable End -->







    </div>
</div>
<!-- CREER OPERATION POPUP-->
<div id="mediumModalCreate" class="modal container-fluid ">
    <div class="container" style="width:80%;float:right">
        <div class="row">
            <div class="card" style="width:80%">

                <center> <p style="background-color: white; color: red" id="sms"></p></center>
                <center> <p style="background-color:white;color:green" id="message"></p></center>
                <div class="card-body">
                    <div class="row pb-2">
                        <div class="col-md-12 col-sm-12 text-center">
                            <input type="text" class="form-control" placeholder="Nom Opérateur " style="background-color:whitesmoke" id="Name" name="Name" required>

                        </div>
                    </div>
                    <div class="row" id="tabCollection">

                    </div>
                    <div class="row">

                        <div class="col-md-3 col-sm-12 col-12">
                            <div class="form-group">
                                <input id="trancheMin" onkeypress="return isNumberKey2(this.id);" name="trancheMin" type="text" class="form-control" placeholder="Tranche mininum" >

                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12 col-12">
                            <div class="form-group">
                                <input id="trancheMax" onkeypress="return isNumberKey2(this.id);" name="trancheMax" type="text" class="form-control" placeholder="Tranche maximum">

                            </div>
                        </div>

                        <div class="col-md-3 col-sm-12 col-12">
                            <div class="form-group">
                                <input id="pourcentage" onkeypress="return isNumberKey2(this.id);" name="pourcentage" type="text" class="form-control" placeholder="Pourcentage">
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-12 col-12">
                            <button type="button" onclick="ajouterItemCollection()" class="btn btn-primary">+</button>
                            <button type="button" onclick="effacerItemCollection()" class="btn btn-primary">X</button>
                        </div>

                    </div>
                    <div class="row pt-1">
                        <div class="col-lg-12">
                            <button class="btn btn-primary" onclick="ajouterAgence()" style="float:right;"> Enregistrer</button>
                            <button class="btn btn-primary" onclick=" document.getElementById('mediumModalCreate').style.display = 'none'; window.location.reload()" style="float:left;"> Fermer</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<input id="departementID" name="departementID" type="text" class="form-control" hidden>

<!-- END CREER PERSONNEL POPUP-->
<!-- MODIFIER PERSONNEL POPUP-->
<div id="mediumModalModify" class="modal container-fluid ">
    <div class="container" style="width:80%;float:right">
        <div class="row">
            <div class="card" style="width:80%">
                <center>
                    <p id="messadeAjouterDepartementM" style="color: green"></p>
                    <p id="smsAjouterDepartementM" style="color:red"></p>
                </center>
                <div class="card-body">
                    <div class="row pb-2">
                        <div class="col-md-12 col-sm-12 text-center">
                            <div class="form-group">
                                <input id="nomM" name="nomM" type="text" placeholder="Nom" class="form-control">
                            </div>
                        </div>
                    </div>
                    <div class="row" id="tabCollectionM">

                    </div>
                    <div class="row">

                        <div class="col-md-3 col-sm-12 col-12">
                            <div class="form-group">
                                <input id="trancheMinM" onkeypress="return isNumberKey2(this.id);" name="trancheMinM" type="text" class="form-control" placeholder="Tranche mininum">

                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12 col-12">
                            <div class="form-group">
                                <input id="trancheMaxM" onkeypress="return isNumberKey2(this.id);" name="trancheMaxM" type="text" class="form-control" placeholder="Tranche maximum">

                            </div>
                        </div>

                        <div class="col-md-3 col-sm-12 col-12">
                            <div class="form-group">
                                <input id="pourcentageM" onkeypress="return isNumberKey2(this.id);" name="pourcentageM" type="text" class="form-control" placeholder="Pourcentage">
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-12 col-12">
                            <button type="button" onclick="ajouterItemCollectionM()" class="btn btn-primary">+</button>
                            <button type="button" onclick="effacerItemCollectionM()" class="btn btn-primary">X</button>
                        </div>

                    </div>
                    <div class="row pt-1">
                        <div class="col-lg-12">
                            <button class="btn btn-primary" onclick="modifierDepartement()" style="float:right;"> Enregistrer</button>
                            <button class="btn btn-primary" onclick=" document.getElementById('mediumModalModify').style.display = 'none'; window.location.reload()" style="float:left;"> Fermer</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- END MODIFIER PERSONNEL POPUP-->
<!-- BLOQUER PERSONNEL POPUP-->

<div id="bloquageModal" class="modal container-fluid " style="padding:15%">
    <div class="container-fluid" style="width: 50%;">
        <div class="row" style="margin-bottom:50%">
            <div class="card p-4">
                <center> <p style="background-color: white; color: red">Voulez-vous changer le statut cette opération ?</p></center>
                <div class="card-body">

                    <input type="text" class="form-control" id="departementID" name="departementID" hidden />
                    <div class="row">
                        <div class="col-lg-6 col-xl-6 col-sm-6 col-md-6">
                            <a class="btn btn-primary" onclick="bloquerDepartement()" style="color: white; width: 100%"> Oui</a>
                        </div>

                        <div class="col-lg-6 col-xl-6 col-sm-6 col-md-6">
                            <a class="btn btn-primary" onclick=" document.getElementById('bloquageModal').style.display = 'none'" style="color: white; width: 100% ">Non</a>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>
<!-- END MODIFIER PERSONNEL POPUP-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/typeahead.js/0.11.1/typeahead.bundle.min.js"></script>
<script src="https://bootstrap-tagsinput.github.io/bootstrap-tagsinput/dist/bootstrap-tagsinput.min.js"></script>
<script>
    function isNumberKey2(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    var collection = new Array();
    var collectionUpdate = new Array();

    function hideError() {

        if ($('#Name').val() != null) { $('#NameError').hide(); }


    }
    function ajouterAgence()
    {



        document.getElementById("message").innerText = null
        document.getElementById("sms").innerText = null
        if (document.getElementById('Name').value.length != 0)
        {
            $.post('@Url.Action("AjouterOperateur")',
            {
                libelle: document.getElementById('Name').value,
                tranches: collection


            },
            function (rep)
            {
                if (rep.code == 200)
                {
                    document.getElementById("message").innerText = rep.message;
                    document.getElementById("sms").innerText = null
                    setTimeout(() => { document.getElementById('mediumModalCreate').style.display = 'none'; window.location.reload() }, 1000);
                }
                else
                {
                    document.getElementById("sms").innerText = rep.message ;
                    document.getElementById("message").innerText = null

                }



            }).fail(function (xhr, status, error) {
                document.getElementById("sms").innerText = " une erreur interne est survenue ";
                document.getElementById("message").innerText = null

            });

        }
        else
        {
          document.getElementById("sms").innerText = "veuillez saisir au moins le nom de l'opérateur";

        }








    }
    function modifierDepartement()
    {
        document.getElementById("messadeAjouterDepartementM").innerText = null
        document.getElementById("smsAjouterDepartementM").innerText = null
        var collectionTempon = new Array();
        collectionUpdate.filter(k => k != null).forEach(m => collectionTempon.push(m))


         $.post('@Url.Action("ajouterOperateur")',
            {

                libelle: document.getElementById('nomM').value,
                tranches: collectionTempon,
                id: document.getElementById('departementID').value
            },
            function (rep)
            {
                if (rep.code == 200)
                {
                    document.getElementById("messadeAjouterDepartementM").innerText = rep.message;
                    document.getElementById("smsAjouterDepartementM").innerText = null
                    setTimeout(() => { document.getElementById('mediumModalModify').style.display = 'none'; window.location.reload() }, 1000);
                }
                else
                {
                    document.getElementById("smsAjouterDepartementM").innerText = rep.message ;
                    document.getElementById("messadeAjouterDepartementM").innerText = null

                }



            }).fail(function (xhr, status, error) {
                document.getElementById("smsAjouterDepartementM").innerText = " une erreur interne est survenue";
                document.getElementById("messadeAjouterDepartementM").innerText = null

            });



    }
    function ouvrirDepartementModal(departementID)
    {
        collectionUpdate ==[]
        document.getElementById("messadeAjouterDepartementM").innerText = null
        document.getElementById("smsAjouterDepartementM").innerText = null
        var departements = @Html.Raw(Json.Encode(Model));
        var departement = departements.filter(e => e.id == departementID)[0];
        departement.tranches.forEach(p => collectionUpdate.push({ id: p.id, montant_sup: p.montant_sup, montant_inf: p.montant_inf, pourcentage: p.pourcentage }) )
        collectionUpdate.forEach((p,index) => {
            $('#tabCollectionM').append(`
                       <div class="col-md-3 col-sm-12 col-12" id="trancheMinItemM${index}">
                           <div class="form-group">
                                <input onkeypress="return isNumberKey2(this.id);"  value="${ p.montant_inf}"  type="text" class="form-control" placeholder="tranche min" readonly>
                            </div>
                        </div>
                         <div class="col-md-3 col-sm-12 col-12" id="trancheMaxItemM${index}">
                          <div class="form-group">
                                <input onkeypress="return isNumberKey2(this.id);" value="${p.montant_sup}"  type="text" class="form-control" placeholder="tranche max" readonly>
                            </div>
                        </div>
                       <div class="col-md-3 col-sm-12 col-12" id="pourcentageItemM${index}">
                           <div class="form-group">
                                <input onkeypress="return isNumberKey2(this.id);"  value="${p.pourcentage}"  type="text" class="form-control" placeholder="pourcentage" readonly>
                            </div>
                        </div>
                         <div class="col-md-2" id="ItemEffacerCollectionM${index}">
                            <button type="button" id="${index}"  onclick="effacerItemCollectionM(this.id)" class="btn btn-primary">X</button>
                        </div>`);
            
        })




            document.getElementById('departementID').value = departementID
            document.getElementById('nomM').value = departement.libelle,

            document.getElementById('mediumModalModify').style.display = 'block'





     }
    function bloquageModal(departementID)
    {
        document.getElementById('bloquageModal').style.display = 'block'
        document.getElementById('departementID').value = departementID



    }
    function bloquerDepartement()
    {
        document.getElementById("messageB").innerText = null
        document.getElementById("smsB").innerText = null

               $.post('@Url.Action("desactiverOperateur")',

                {
                    No: document.getElementById('departementID').value
                },
            function (rep)
            {
                if (rep.code == 200)
                {

                    document.getElementById("messageB").innerText = rep.message;
                    document.getElementById("smsB").innerText = null
                    window.location.reload()
                }
                else
                {
                    document.getElementById("smsB").innerText = rep.message;
                    document.getElementById("messageB").innerText = null
                }
            }
            ).fail(function (xhr, status, error)
            {
                                //Ajax request failed.
                document.getElementById("smsB").innerText = " une erreur interne est survenue coté client";
                document.getElementById("messageB").innerText = null

            });
    }
    function ajouterItemCollection()
    {
        var trancheMin = Number($("#trancheMin").val())
        var trancheMax = Number($("#trancheMax").val())
        var pourcentage = $("#pourcentage").val()
        var resultat = trancheMin < trancheMax;
        if (resultat ==true && pourcentage.length > 0) {
            collection.push({ montant_sup: $("#trancheMax").val(), montant_inf: $("#trancheMin").val(), pourcentage: $("#pourcentage").val() })


            var indxCurrentCollection = collection.length - 1

            // Adding a row inside the tbody.
            $('#tabCollection').append(`
                       <div class="col-md-3 col-sm-12 col-12" id="trancheMinItem${indxCurrentCollection}">
                           <div class="form-group">
                                <input onkeypress="return isNumberKey2(this.id);"  value="${trancheMin}"  type="text" class="form-control" placeholder="tranche min" readonly>
                            </div>
                        </div>
                         <div class="col-md-3 col-sm-12 col-12" id="trancheMaxItem${indxCurrentCollection}">
                          <div class="form-group">
                                <input onkeypress="return isNumberKey2(this.id);" value="${trancheMax}"  type="text" class="form-control" placeholder="tranche max" readonly>
                            </div>
                        </div>
                       <div class="col-md-3 col-sm-12 col-12" id="pourcentageItem${indxCurrentCollection}">
                           <div class="form-group">
                                <input onkeypress="return isNumberKey2(this.id);"  value="${pourcentage}"  type="text" class="form-control" placeholder="pourcentage" readonly>
                            </div>
                        </div>
                         <div class="col-md-2" id="ItemEffacerCollection${indxCurrentCollection}">
                            <button type="button" id="${indxCurrentCollection}"  onclick="effacerItemCollection(this.id)" class="btn btn-primary">X</button>
                        </div>`);

            $("#trancheMin").val(null)
            $("#trancheMax").val(null)
            $("#pourcentage").val(null)
        }
        else
        {
            document.getElementById("sms").innerText = "veuillez saisir une tranche minimale inférieure à celle du maximun";

        }





    }

    function effacerItemCollection(id) {
        $('#trancheMinItem' + id).remove();
        $('#trancheMaxItem' + id).remove();
        $('#pourcentageItem' + id).remove();
        $('#ItemEffacerCollection' + id).remove();
        delete collection[id]

    }
    function ajouterItemCollectionM()
    {
        var trancheMin = Number($("#trancheMinM").val())
        var trancheMax = Number($("#trancheMaxM").val())
        var pourcentage = $("#pourcentageM").val()
        var resultat = trancheMin < trancheMax;
       

        if (resultat == true && pourcentage.length > 0) {
         collectionUpdate.push({ montant_sup: $("#trancheMaxM").val(), montant_inf: $("#trancheMinM").val(), pourcentage: $("#pourcentageM").val() })


            var indxCurrentCollection = collectionUpdate.length - 1

            // Adding a row inside the tbody.
            $('#tabCollectionM').append(`
                       <div class="col-md-3 col-sm-12 col-12" id="trancheMinItemM${indxCurrentCollection}">
                           <div class="form-group">
                                <input onkeypress="return isNumberKey2(this.id);"  value="${trancheMin}"  type="text" class="form-control" placeholder="tranche min" readonly>
                            </div>
                        </div>
                         <div class="col-md-3 col-sm-12 col-12" id="trancheMaxItemM${indxCurrentCollection}">
                          <div class="form-group">
                                <input onkeypress="return isNumberKey2(this.id);" value="${trancheMax}"  type="text" class="form-control" placeholder="tranche max" readonly>
                            </div>
                        </div>
                       <div class="col-md-3 col-sm-12 col-12" id="pourcentageItemM${indxCurrentCollection}">
                           <div class="form-group">
                                <input onkeypress="return isNumberKey2(this.id);"  value="${pourcentage}"  type="text" class="form-control" placeholder="pourcentage" readonly>
                            </div>
                        </div>
                         <div class="col-md-2" id="ItemEffacerCollectionM${indxCurrentCollection}">
                            <button type="button" id="${indxCurrentCollection}"  onclick="effacerItemCollectionM(this.id)" class="btn btn-primary">X</button>
                        </div>`);

            $("#trancheMinM").val(null)
            $("#trancheMaxM").val(null)
            $("#pourcentageM").val(null)

        }
        else {
            document.getElementById("smsAjouterDepartementM").innerText = "veuillez saisir une tranche minimale inférieure à celle du maximun";

        }





    }

    function effacerItemCollectionM(id) {
        $('#trancheMinItemM' + id).remove();
        $('#trancheMaxItemM' + id).remove();
        $('#pourcentageItemM' + id).remove();
        $('#ItemEffacerCollectionM' + id).remove();
        delete collectionUpdate[id]

    }
</script>